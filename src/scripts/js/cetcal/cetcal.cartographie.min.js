/** *********************************************************************************
 * Gestion de la recherche par communes pour la cartographie. impl typeahead.js
 */
console.log('init carto.');
var json_communes;
var json_distinct_produits;
var commune_cible = '';
var substringMatcher = function(strs) {
  return function findMatches(q, cb) {

    var matches, substringRegex;
    // an array that will be populated with substring matches
    matches = [];
    // regex used to determine if a string contains the substring `q`
    substrRegex = new RegExp(q, 'i');
    // iterate through the pool of strings and for any string that
    // contains the substring `q`, add it to the `matches` array
    $.each(strs, function(i, str) { if (substrRegex.test(str)) { matches.push(str); } });
    if (Array.isArray(matches) && matches.length === 1) commune_cible = matches[0];
    else commune_cible = undefined;

    cb(matches);
  };
};

var communes = [];
$.ajax({
  url: '/src/app/controller/cet.annuaire.controller.communes.php',
  success: function(json) { 
    var cmns = JSON.parse(json);
    json_communes = cmns;
    for (var i = 0; i < cmns.length; ++i) communes.push(cmns[i].libelle);
  },
  error: function(jqXHR, textStatus, errorThrown) {
    console.log(textStatus, errorThrown);
  }
});

/** *************************************************************************************
 * Gestion cartographie.
 */
const init_zoom_factor = 10;
const min_zoom_factor = 4;
const fly_to_zoom_factor = 16;
const icons_array = [];
const marker_collection = [];

$('#cet-annuaire-crt-main').height($(window).height() * 0.56);
var htmlMiniFiche = '';
var cetcrtmainmap = L.map('cet-annuaire-crt-main').setView([44.854, -0.043], init_zoom_factor);

// Prévenir le sé-zoom excessif.
cetcrtmainmap.options.minZoom = min_zoom_factor;
/**
 * Pervent zoom in/out on map.
 * cetcrtmainmap.scrollWheelZoom.disable();
 */
cetcrtmainmap.addControl(new L.Control.Fullscreen({
  title: {
      'false': 'Passer en mode plein écran',
      'true': 'Quitter le mode plein écran'
  }
}));
var clusters = L.markerClusterGroup();

var cetAnnuaireIcon_inscrit = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/ferme.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'Producteur inscrit'
});
icons_array.push({icon: cetAnnuaireIcon_inscrit, desc: 'Producteur partenaire www.decidelabiolocale.org'});

var cetAnnuaireIcon_bioab = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/ferme_bioab.png',
    iconSize: [50, 90],
    popupAnchor: [0, -20],
    type: 'Producteur certifié BIO/AB'
});
icons_array.push({icon: cetAnnuaireIcon_bioab, desc: 'Producteur certifié Agriculture Biologique'});

var cetAnnuaireIcon = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/ferme.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'Producteur pré-inscrit'
});
icons_array.push({icon: cetAnnuaireIcon, desc: 'Producteur certifié AB (en cours de certification, y tendant) référencé dans l\'annuaire cetcal.'});

var cetIciIcon = L.icon({
    iconUrl: 'res/content/icons/ici.png',
    iconSize: [90, 90]
});

var cetAnnuaireMarcheIcon = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/marche.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'Marché'
});
icons_array.push({icon: cetAnnuaireMarcheIcon, desc: 'Marché référencé dans l\'annuaire cetcal.'});

var amapIcon = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/amap.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'AMAP'
});
icons_array.push({icon: amapIcon, desc: 'AMAP référencé dans l\'annuaire cetcal.'});

var cetAnnuaireIcon_magasinBio = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/magasinbio.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'Magasin BIO'
});
icons_array.push({icon: cetAnnuaireIcon_magasinBio, desc: 'Magasin, boutique ou épicerie BIO (produits certifiés AB).'});

var associationsIcon = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/assodist.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'Associations liées à la BIO Locale'
});
icons_array.push({icon: associationsIcon, desc: 'Associations liée à la BIO Locale (distribution possible)'});

L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox/outdoors-v11', // voir res/data/datafiles/cet.annuaire.liste.styles.mapbox
    tileSize: 512,
    zoomOffset: -1,
    accessToken: 'pk.eyJ1IjoiY2V0Y2FsbWFwYm94IiwiYSI6ImNrbTBiOXN4czNsM3oyb253dzhqNnptMG0ifQ.IW-3RkU6unL_6pAry6tLbg'
}).addTo(cetcrtmainmap);

$('producteur').each(function(i) {

  /**
   * Si le producteur est en erreure de cartographie mapbox du à l'adresse de sa ferme alors passer.
   * Dans ce cas, le producteur est toppé à ERR dans la table cartographie.
   */ 
  if ($(this).find('latlng').text().indexOf('ERROR') != -1) return;

  var pkprd = $(this).find('pk').text();
  var categorie = $(this).find('categorie').text();
  var adrcrt = $(this).find('addresscrt').text();
  var coordinatesLl = $(this).find('latlng').text().split('/');
  let adr = $(this).find('address').text();
  let email = $(this).find('email').text();
  let np = $(this).find('nom').text() + ' ' + $(this).find('prenom').text();
  let nomFerme = $(this).find('nomferme').text(); 
  let urlwww = $(this).find('urlwww').text().toLowerCase();
  let urlwwwboutique = $(this).find('urlboutique').text().toLowerCase();
  let fournisseurcet = $(this).find('fournisseurcet').text().toLowerCase();
  var fb = $(this).find('urlfb').text();
  var ig = $(this).find('urlig').text();
  var logo_ferme = $(this).find('logoferme').text();
  var inscrit = $(this).find('prodinscrit').text();
  var produits_ltrl = $(this).find('produitsltrl').text();
  var marches_ltrl = $(this).find('marchesltrl').text();
  var lieux_ltrl = $(this).find('lieuxltrl').text();
  var infos_ltrl = $(this).find('infosltrl').text();
  let is_certif_bioab = $(this).find('certifbioab').text();
  let url_certif_bioab = $(this).find('certifbioaburl').text(); 

  if (ig.length > 3 && (ig.indexOf('http://www.instagram') < 0 ||
      ig.indexOf('https://www.instagram') < 0)) ig = 'https://www.instagram.com/' + ig;
  var htmlFB = '';
  var htmlIG = '';
  var htmlMiniFiche = '<p class="cet-cartographie-popup" style="font-size: 16px;" data="' + pkprd + '">' + 
      '<span class="cet-ann-crt-head-text">' + nomFerme 
      + (logo_ferme.length > 0 ? '<img class="mini-fiche-logo-element" src="' + logo_ferme + '"/>' : '')
      + '</span><br>' + adr;
  if (inscrit.trim() === 'true') {
      htmlMiniFiche += '<br><email>' + email + '</email>';
  }
  if (urlwww.length > 3) htmlMiniFiche += 
      '<br><a href="' + urlwww + '" target="_blank">Visiter le site Web</a>';
  if (urlwwwboutique.length > 3) htmlMiniFiche +=
      '<br><a href="' + urlwwwboutique + '" target="_blank">Visiter la boutique en ligne</a>';
  if (inscrit.trim() === 'true' || inscrit.trim() === 'amdif') {
      htmlMiniFiche += '<br><a class="cet-crt-link" href="./?statut=fichedetailleeprd&anr=true&pkprd=' + pkprd +'" target="_blank">Voir la fiche détaillée</a>';
  } else {
      htmlMiniFiche += '<br>Produits: <span style="color:green;">' + produits_ltrl + '</span>' +
      '<br>Marchés: <span style="color:blue;">' + marches_ltrl + '</span>' +
      '<br>Lieux de distribution: <span style="color:orange;">' + lieux_ltrl + '</span>' +
      '<br>Infos: <span style="color:darkcyan;">' + infos_ltrl + '</span>';
  }
  htmlMiniFiche += '<br>'; // back to line for social media icon links.
  if (fb.length > 3) htmlFB = 
      '<a href="' + fb + '" target="_blank"><img class="cet-crt-icon" src="/res/content/icons/facebook-flat-icon.png" height="20"/></a>';
  htmlMiniFiche += htmlFB;
  if (ig.length > 3) htmlIG = 
      '<a href="' + ig + '" target="_blank"><img class="cet-crt-icon" src="/res/content/icons/ig-flat-icon_256.png" height="20" /></a>';
  htmlMiniFiche += htmlIG;
  htmlMiniFiche += '<span style="float:right; margin-right: -4px !important;">n°' + pkprd + '</span>'
  htmlMiniFiche += '<br></p>';

  var icon_carto = undefined;
  icon_carto = (inscrit.trim() === 'true') ? cetAnnuaireIcon_inscrit : cetAnnuaireIcon;
  icon_carto = (is_certif_bioab === 'true') ? cetAnnuaireIcon_bioab : icon_carto;
  
  var marker = L.marker([coordinatesLl[1], coordinatesLl[0]], {icon: icon_carto});
  var popupOptions = {};
  var popup = L.popup(popupOptions, marker);
  popup.setContent(htmlMiniFiche);
  marker.bindPopup(popup);

  // Append to cluster marker group and add marker to global array.
  clusters.addLayer(marker);
  marker_collection.push({type: icon_carto.options.type, mrkr: marker});
});

$('entite').each(function(i) {

    if ($(this).find('latlng').text().indexOf('ERROR') != -1) return;

    var entpk = $(this).find('pk').text();
    var type = $(this).find('type').text();
    var coordinatesLl = $(this).find('latlng').text().split('/');
    let denomination = $(this).find('denomination').text();
    let adresse = $(this).find('adresse').text();
    let email = $(this).find('email').text();
    var logo_entite = $(this).find('logoentite').text();
    
    var entite_icon = undefined;
    if (type === 'marche') entite_icon = cetAnnuaireMarcheIcon;
    else if (type === 'amap') entite_icon = amapIcon;
    else if (type === 'mbio') entite_icon = cetAnnuaireIcon_magasinBio;
    else entite_icon = associationsIcon;

    var marker = L.marker(
        [coordinatesLl[1], coordinatesLl[0]], {icon: entite_icon}
      );
    var popupOptions = {};
    var popup = L.popup(popupOptions, marker);
    popup.setContent('<span class="cet-ann-crt-popuptext-marches">' + denomination + '</span>'
      + (logo_entite.length > 0 ? '<p class="mini-fiche-logo-element-container"><img class="mini-fiche-logo-element" src="' + logo_entite + '" /></p>' : '')
      + '<br>' + adresse
      + '<br><a href="./?statut=asso.vente&anr=true&type=' + type + '&q=' + denomination + '" target="_blank">Voir plus d\'informations</a>');
    marker.bindPopup(popup);

    // Append to cluster marker group and add marker to global array.
    clusters.addLayer(marker);
    marker_collection.push({type: entite_icon.options.type, mrkr: marker});
});

/**
 * Finally, append clusterized markers to map :
 */
cetcrtmainmap.addLayer(clusters);

/* *****************************************/
/* 40 km & 10 km autour de castillon.***************/
L.circle([44.854, -0.043], {
    color: "red",
    fillColor: "red",
    fillOpacity: 0,
    radius: 1 * 10000.0,
    interactive: false
  }).addTo(cetcrtmainmap);
L.circle([44.854, -0.043], {
    color: "red",
    fillColor: "red",
    fillOpacity: 0,
    radius: 4 * 10000.0,
    interactive: false
  }).addTo(cetcrtmainmap);
var popupC1 = L.popup()
    .setLatLng([44.854, -0.043])
    .setContent('<p style="color:rgb(20,30,20);"><span style="font-weight:bold; color:red;">_____</span> Rayon de 10 et 40 km autour de<br>Castillon-la-Bataille')
    .openOn(cetcrtmainmap);
/* *****************************************/

// Naviagation vers geoloc client si acceptée.
function cartographieFlyTo(latlng, spliter) {
  scrollTowardsId('cet-annuaire-crt-main-anchor', 0);
  var lL = latlng.split(spliter);
  cetcrtmainmap.flyTo([lL[1], lL[0]], fly_to_zoom_factor, { animate: true, duration: 1.5 });
}

/** **********************************************************************************************/
$('#valider-recherche-commune-cartographie').on('mousedown', function() {
  var c = $('#cet-annuaire-recherche-communes-value').val().trim();
  if (c.length < 2) return;
  if (commune_cible !== undefined && commune_cible.length > 2) c = commune_cible;
  updateCommune(c);
});

var cetGeoLoc = new CETGeoLoc();
var geoLocLatLng = cetGeoLoc.init(cetcrtmainmap, cetIciIcon, init_zoom_factor);

$('#parametres-recherche-detaillee-carto-cet-toggle').on('mousedown', function() {
  $('#parametres-recherche-detaillee-carto-cet').slideToggle(600);
});
$('#siste-styles-mapbox-style-appliquer').on('mousedown', function() {
  cetcrtmainmap.setStyle('mapbox://styles/mapbox/' + $('#liste-styles-mapbox-style').find(":selected").val());
});

/** ******************************************************************************************
 * Dropdown de filtres et événements DOM liés.
 */
// Listing des icones + descriptions.
for (var i = 0; i < icons_array.length; i++) {
  $('#liste-icones-fonctions').append('<li style="margin-bottom: 6px;"><img style="width:50px;" src="' 
    + icons_array[i].icon.options.iconUrl 
    + '" />&#160;&#160;' + icons_array[i].desc + '</li>');
  $('div#dropdown-filtres-cartographie-liste').append(
    '<div class="form-check form-group mb-3 cet-cartographie-filtre-input-container">'
    + '<input class="form-check-input cet-cartographie-filtre-input" type="checkbox" value="' 
    + icons_array[i].icon.options.type 
    + '" id="cet-cartographie-filtre-' 
    + icons_array[i].icon.options.type 
    + '" checked="checked"><label class="form-check-label" for="cet-cartographie-filtre-' 
    + icons_array[i].icon.options.type + '"><img src="' + icons_array[i].icon.options.iconUrl 
    + '" height="32" />&#160;&#160;' + icons_array[i].icon.options.type + '</label></div>');
}

$('div#dropdown-filtres-cartographie-liste').append('<button class="btn cet-navbar-btn cet-navbar-btn-small" id="valider-filtres-types-cartographie" type="button" data-toggle="dropdown">Appliquer les filtres</button>');

$('#dropdown-filtres-count').html(marker_collection.length + ' éléments sur carte');
$('#total-elements-cartographies-visibles').text(marker_collection.length);

$('#dropdown-filtres-cartographie-dropdown').on('hide.bs.dropdown', function (e) {                 
  e.stopPropagation(); e.preventDefault();                             
});

$('#valider-filtres-types-cartographie').on('mousedown', function() {
  filtres_actifs = [];
  $('.cet-cartographie-filtre-input').each(function () {
    if ($(this).is(':checked')) filtres_actifs.push($(this).val());
  });
  $('#dropdown-filtres-cartographie-liste').removeClass('show');
  appliquerFiltreCartographie(filtres_actifs);
});
/** ****************************************************************************************** */

function updateCartoRechercheAvancee(pk_prds, pk_ents, commune_cp, rayon) {
  clusters.clearLayers();
  var count = 0;
  for (var i = 0; i < marker_collection.length; i++) {
    if (marker_collection[i].type.indexOf('Producteur') !== -1) {
      var html = marker_collection[i].mrkr._popup._content;
      var pk = $(html).attr('data');
      if (pk_prds.includes(pk)) {
        clusters.addLayer(marker_collection[i].mrkr);
        ++count;
      }
    }
  }
}

function appliquerFiltreCartographie(filtres_actifs) {
  clusters.clearLayers();
  var count = 0;
  for (var i = 0; i < marker_collection.length; i++) {
    if (filtres_actifs.includes(marker_collection[i].type)) {
      clusters.addLayer(marker_collection[i].mrkr);
      ++count;
    }
  }
  $('#dropdown-filtres-count').html(count + ' éléments sur carte');
}

function updateCommune(c) {
  var found = false;
  for (var i = 0; i < json_communes.length; ++i) {
    if (json_communes[i].libelle === c) {
      cetcrtmainmap.flyTo([json_communes[i].lat, json_communes[i].lng], 13.6, 
        { animate: true, duration: 1.5 });
      //scrollTowardsId('cet-annuaire-crt-main-anchor', -20);
      var marker = L.marker([json_communes[i].lat, json_communes[i].lng]).bindPopup(
          L.popup().setLatLng("[json_communes[i].lat, json_communes[i].lng]"
            ).setContent(json_communes[i].libelle).openOn(cetcrtmainmap)
        ).addTo(cetcrtmainmap);
      found = true;
      break;
    }
  }

  if (found === false) {
      $('#modal-questionaire-titre').text('Aucune commune trouvée pour "' + c + '"');
      $('#modal-questionaire-paragraphe').text('Nous ne trouvons aucune commune pour "' + c 
        + '". Veuillez sélectionner une commune en cliquant dans la liste proposée ou sélectionner une commune à proximité de la votre.');
      $('#modal-questionaire-btn-primary').text("J'ai compris");
      $('#modal-questionaire-btn').click(); 
  }
}

function ravElementFocus(pk_producteur) {
  for (var i = 0; i < marker_collection.length; i++) {
    if (marker_collection[i].type.indexOf('Producteur') !== -1) {
      var html = marker_collection[i].mrkr._popup._content;
      var pk = $(html).attr('data');
      if (pk_producteur == pk) {
        //console.log('focused producteur pk=' + pk);
        //console.log('focused producteur html=' + html);
        //cartographieFlyTo();
        var latlng = marker_collection[i].mrkr.__parent._latlng;
        cetcrtmainmap.flyTo([latlng.lat, latlng.lng], 15);
        marker_collection[i].mrkr.fire('click');
        // TODO : debug >> doubleclick prog doesnt really work... worst case scenario...
      }
    }
  }
}

function drawRequestedCercleOfRadiusAroundCoordinate(communeCp, radius) {
  
  for (var i = 0; i < json_communes.length; ++i) {
    
    if (json_communes[i] !== null && json_communes[i] !== undefined && 
      communeCp === null && communeCp === undefined &&
      communeCp === json_communes[i].libelle) {
      /*L.circle(json_communes[i].lng, json_communes[i].lat, {
        color: "cyan",
        fillColor: "cyan",
        fillOpacity: 0.5,
        radius: radius * 10000.0,
        interactive: false
      }).addTo(cetcrtmainmap);
      return;*/
    }
  }
}

/** *********************************************************************************
 * Initialisation de la recherche avancée sur event show de la modal.
 */
var rav_loaded = false;
$('#modal-cet-recherche-avancee').on('show.bs.modal', function (event) {

  if (rav_loaded) return;
  rav_loaded = true;
  var distinct_produits = [];
  $.ajax({
    url: '/src/app/controller/cet.annuaire.controller.distinct.produits.php',
    success: function(json) { 
      var prds = JSON.parse(json);
      json_distinct_produits = prds;
      for (var i = 0; i < prds.length; ++i) distinct_produits.push(prds[i].nom);
    },
    error: function(jqXHR, textStatus, errorThrown) {
      console.log(textStatus, errorThrown);
    }
  });

  $.ajax({
    url: '/src/app/controller/cet.annuaire.controller.types.entites.php',
    success: function(json) { 
      var ents = JSON.parse(json);
      var distinct_ents = ents;
      for (var i = 0; i < ents.length; ++i) {
        $('#rav-categorie').append('<option value="' + ents[i].type + '" data-type="entite" '
          + 'data="' + ents[i].type + '">' + ents[i].type + '</option>');
      }
    },
    error: function(jqXHR, textStatus, errorThrown) {
      console.log(textStatus, errorThrown);
    }
  });

  $("#rav-rayon").hide();
  $('#cet-annuaire-recherche-communes-conatiner .typeahead').on('typeahead:selected', function(evt, item) {
    if ($('#cet-annuaire-recherche-communes-value').val().length > 0) {
      $("#rav-rayon").show();
    } else {
      $("#rav-rayon").hide();
    }
  });
  $('#cet-annuaire-recherche-communes-value').on('blur', function() {
    if ($('#cet-annuaire-recherche-communes-value').val().length > 0) {
      $("#rav-rayon").show();
    } else {
      $("#rav-rayon").hide();
    }
  });

  $('#cet-annuaire-recherche-communes-conatiner .typeahead').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
  },
  {
    name: 'communes',
    source: substringMatcher(communes)
  });

  $('#rav-categorie-ajouter').on('mousedown', function() {
    if ($("#rav-categorie").find(":selected").val() != 0) {
      var this_id = 'rav-categorie-' + $("#rav-categorie").find(":selected").val().replaceAll(';', '');
      this_id = this_id.replaceAll(' ', '');
      this_id = this_id.replaceAll('/', '');
      this_id = this_id.replaceAll('\'', '');
      this_id = this_id.replaceAll('#', '');
      var this_data = $("#rav-categorie").find(":selected").val();
      var this_datatype = $("#rav-categorie").find(":selected").attr('data-type');
      var found = false;
      $('.rav-categorie-critere').each(function() { if ($(this).attr('data') == this_data) { 
        alert('élément déjà sélectionné.'); found = true; return; 
      }});
      if (!found) {
        $('#rav-categorie-selected').append('<span id="' + this_id 
          + '" class="badge badge-primary rav-categorie-critere" style="margin-right: 6px;"' 
          + ' data="' + this_data + '"' 
          + 'data-type="' + this_datatype + '">' 
          + $("#rav-categorie").find(":selected").text()
          + '<span onmousedown="$(\'#' + this_id + '\').remove();">' 
          + '&#160;<i class="fas fa-times"></i></span></span>');
      }
    }
  });

  $('#cet-annuaire-recherche-produits-conatiner .typeahead').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
  },
  {
    name: 'distinct_produits',
    source: substringMatcher(distinct_produits)
  });

  $('#rav-produit-ajouter').on('mousedown', function() {
    if ($("#cet-annuaire-recherche-produits-value").val() != '') {
      var this_id = 'rav-produit-' + $("#cet-annuaire-recherche-produits-value").val();
      var this_data = $("#cet-annuaire-recherche-produits-value").val();
      var found = false;
      $('.rav-produit-critere').each(function() { if ($(this).attr('data') == this_data) { 
        alert('élément déjà sélectionné.'); found = true; return; 
      }});
      if (!found) {
        $('#rav-produits-selected').append('<span id="' + this_id 
          + '" class="badge badge-primary rav-produit-critere" style="margin-right: 6px;"' 
          + ' data="' + this_data + '">' + this_data
          + '<span onmousedown="$(\'#' + this_id + '\').remove();">' 
          + '&#160;<i class="fas fa-times"></i></span></span>');
        $('#cet-annuaire-recherche-produits-conatiner .typeahead').typeahead('val','');
      }
    }
  });

  $('#rav-envoi-recherche-avancee').on('mousedown', function(e) {
    var json_rav = {};
    json_rav.commune = $('#cet-annuaire-recherche-communes-value').val();
    json_rav.rayon = $("#rav-rayon").find(":selected").val();
    json_rav.categories = [];
    $('.rav-categorie-critere').each(function() {
      json_rav.categories.push($(this).attr('data'));
    });
    json_rav.produits = [];
    $('.rav-produit-critere').each(function() {
      json_rav.produits.push($(this).attr('data'));
    });
    json_rav.criteresplus = $('#rav-critere').val();
    json_rav.certification = $("#rav-certification").find(":selected").val();
    json_rav.modesvente = [];
    json_rav.inclureentites = $("#inclure-entites-rav").is(':checked');
    
    $.ajax({
      type: "POST",
      url: '/src/app/controller/ajaxhandlers/cet.annuaire.controller.ajaxhandler.recherche.avancee.php?json=' + JSON.stringify(json_rav),
      success: function(json) { 
        $('#resultats-recherche-avancee').empty();
        var data = JSON.parse(json);
        if (data.length <= 0) $('#resultats-recherche-avancee').append('<p>Aucun résultat</p>');
        else $('#resultats-recherche-avancee').append('<p><b>' + data.length + ' résultats trouvés.</b></p>');
        var pk_rav_producteurs = [];
        var pk_rav_entites = [];       
        for (var i in data) {
          $('#resultats-recherche-avancee').append(
            '<p id="rav-' + data[i].pk + '" class="rav-element-resultat"' 
              + ' onmousedown="ravElementFocus(' + data[i].pk + ');">' 
              + data[i].adrCodePostal + ' ' + data[i].adrCommune + '|' + data[i].adrfermeLtrl + '|' + data[i].nomferme + '|' + data[i].nom + ' ' + data[i].prenom + '|' 
              + data[i].typeDeProduction.replaceAll('µ', ' ') + '|'
              + data[i].categorie
              + '</p>'
          );
          pk_rav_producteurs.push(data[i].pk);
        }
        $('#resultats-recherche-avancee').show();
        updateCartoRechercheAvancee(pk_rav_producteurs, pk_rav_entites, json_rav.commune, json_rav.rayon);
        //if (json_rav.commune.length > 0) updateCommune(json_rav.commune);
        //drawRequestedCercleOfRadiusAroundCoordinate(json_rav.commune, json_rav.rayon);
      },
      error: function(jqXHR, textStatus, errorThrown) {
        $('#resultats-recherche-avancee').empty();
        $('#resultats-recherche-avancee').append('<p>Erreur sur recherche détaillée.</p>');
        $('#resultats-recherche-avancee').show();
      }
    });
  });

});
/** *************************************************************************************/