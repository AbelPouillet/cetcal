/** *************************************************************************************
 * Gestion de la recherche par communes pour la cartographie.
 * impl typeahead.js
 */
var json_communes;
var substringMatcher = function(strs) {
  return function findMatches(q, cb) {

    var matches, substringRegex;
    // an array that will be populated with substring matches
    matches = [];
    // regex used to determine if a string contains the substring `q`
    substrRegex = new RegExp(q, 'i');
    // iterate through the pool of strings and for any string that
    // contains the substring `q`, add it to the `matches` array
    $.each(strs, function(i, str) { if (substrRegex.test(str)) { matches.push(str); } });

    cb(matches);
  };
};

var communes = [];
$.ajax({
  url: '/src/app/controller/cet.annuaire.controller.communes.php',
  success: function(json) {
    var cmns = JSON.parse(json);
    json_communes = cmns;
    for (var i = 0; i < cmns.length; ++i) communes.push(cmns[i].libelle);
  },
  error: function(jqXHR, textStatus, errorThrown) {
    console.log(textStatus, errorThrown);
  }
});

$('#cet-annuaire-recherche-communes-conatiner .typeahead').typeahead({
  hint: true,
  highlight: true,
  minLength: 1
},
{
  name: 'communes',
  source: substringMatcher(communes)
});
/** *************************************************************************************/

/** *************************************************************************************
 * Gestion cartographie.
 */
var icons_array = [];
var marker_collection = [];

$('#cet-annuaire-crt-main').height($(window).height() * 0.56);
var htmlMiniFiche = '';
var cetcrtmainmap = L.map('cet-annuaire-crt-main').setView([44.854, -0.043], 8);
cetcrtmainmap.scrollWheelZoom.disable();
cetcrtmainmap.addControl(new L.Control.Fullscreen({
  title: {
      'false': 'Passer en mode plein écran',
      'true': 'Quitter le mode plein écran'
  }
}));
var clusters = L.markerClusterGroup();

var cetAnnuaireIcon = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/ferme.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'Producteur'
});
icons_array.push({icon: cetAnnuaireIcon, desc: 'Producteur certifié AB (en cours de certification, y tendant) référencé dans l\'annuaire cetcal.'});

var cetAnnuaireIcon_fournisseurcet = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/ferme.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'Producteur fournisseur CET'
});
//icons_array.push({icon: cetAnnuaireIcon_fournisseurcet, desc: 'Producteur fournisseur de l\'épicerie CET et référencé dans l\'annuaire cetcal.'});

var cetAnnuaireIcon_viticulteur = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/viticulteur.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'Viticulteur'
});
icons_array.push({icon: cetAnnuaireIcon_viticulteur, desc: 'Viticulteur.'});

var cetIciIcon = L.icon({
    iconUrl: 'res/content/icons/ici.png',
    iconSize: [90, 90]
});

var cetAnnuaireMarcheIcon = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/marche.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'Marché'
});
icons_array.push({icon: cetAnnuaireMarcheIcon, desc: 'Marché référencé dans l\'annuaire cetcal.'});

var amapIcon = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/amap.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'AMAP'
});
icons_array.push({icon: amapIcon, desc: 'AMAP référencé dans l\'annuaire cetcal.'});

var cetAnnuaireIcon_magasinBio = L.icon({
    iconUrl: 'res/content/icons/bonpour1tour/withbg/magasinbio.png',
    iconSize: [50, 50],
    popupAnchor: [0, -20],
    type: 'Magasin BIO'
});
icons_array.push({icon: cetAnnuaireIcon_magasinBio, desc: 'Magasin, boutique ou épicerie BIO (produits certifiés AB).'});

var style_mapbox = $('#liste-styles-mapbox-style').find(":selected").val();
L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
    maxZoom: 18,
    id: style_mapbox,
    tileSize: 512,
    zoomOffset: -1,
    accessToken: 'pk.eyJ1IjoiY2V0Y2FsbWFwYm94IiwiYSI6ImNrbTBiOXN4czNsM3oyb253dzhqNnptMG0ifQ.IW-3RkU6unL_6pAry6tLbg'
}).addTo(cetcrtmainmap);

$('producteur').each(function(i) {

  /**
   * Si le producteur est en erreure de cartographie mapbox du à l'adresse de sa ferme alors passer.
   * Dans ce cas, le producteur est toppé à ERR dans la table cartographie.
   */ 
  if ($(this).find('latlng').text().indexOf('ERROR') != -1) return;

  var pkprd = $(this).find('pk').text();
  var categorie = $(this).find('categorie').text();
  var adrcrt = $(this).find('addresscrt').text();
  var coordinatesLl = $(this).find('latlng').text().split('/');
  let adr = $(this).find('address').text();
  let email = $(this).find('email').text();
  let np = $(this).find('nom').text() + ' ' + $(this).find('prenom').text();
  let nomFerme = $(this).find('nomferme').text(); 
  let urlwww = $(this).find('urlwww').text().toLowerCase();
  let urlwwwboutique = $(this).find('urlboutique').text().toLowerCase();
  let fournisseurcet = $(this).find('fournisseurcet').text().toLowerCase();
  var fb = $(this).find('urlfb').text();
  var ig = $(this).find('urlig').text();
  var logo_ferme = $(this).find('logoferme').text();
  var inscrit = $(this).find('prodinscrit').text();
  var produits_ltrl = $(this).find('produitsltrl').text();
  var marches_ltrl = $(this).find('marchesltrl').text();
  var lieux_ltrl = $(this).find('lieuxltrl').text();
  var infos_ltrl = $(this).find('infosltrl').text();

  if (ig.length > 3 && (ig.indexOf('http://www.instagram') < 0 ||
      ig.indexOf('https://www.instagram') < 0)) ig = 'https://www.instagram.com/' + ig;
  var htmlFB = '';
  var htmlIG = '';
  var htmlMiniFiche = '<p class="cet-cartographie-popup" style="font-size: 16px;">' + 
      '<span class="cet-ann-crt-head-text">' + nomFerme 
      + (logo_ferme.length > 0 ? '<img class="mini-fiche-logo-ferme" src="' + logo_ferme + '"/>' : '')
      + '</span><br>' + adr;
  if (inscrit.trim() === 'true') {
      htmlMiniFiche += '<br><email>' + email + '</email>';
  }
  if (urlwww.length > 3) htmlMiniFiche += 
      '<br><a href="' + urlwww + '" target="_blank">Visiter le site Web</a>';
  if (urlwwwboutique.length > 3) htmlMiniFiche +=
      '<br><a href="' + urlwwwboutique + '" target="_blank">Visiter la boutique en ligne</a>';
  if (inscrit.trim() === 'true') {
      htmlMiniFiche += '<br><a class="cet-crt-link" href="./?statut=fichedetailleeprd&anr=true&pkprd=' + pkprd +'">Voir la fiche détaillée</a>';
  } else {
      htmlMiniFiche += '<br>Produits: <span style="color:green;">' + produits_ltrl + '</span>' +
      '<br>Marchés: <span style="color:blue;">' + marches_ltrl + '</span>' +
      '<br>Lieux de distribution: <span style="color:orange;">' + lieux_ltrl + '</span>' +
      '<br>Infos: <span style="color:darkcyan;">' + infos_ltrl + '</span>';
  }
  htmlMiniFiche += '<br>'; // back to line for social media icon links.
  if (fb.length > 3) htmlFB = 
      '<a href="' + fb + '" target="_blank"><img class="cet-crt-icon" src="/res/content/icons/facebook-flat-icon.png" height="20"/></a>';
  htmlMiniFiche += htmlFB;
  if (ig.length > 3) htmlIG = 
      '<a href="' + ig + '" target="_blank"><img class="cet-crt-icon" src="/res/content/icons/ig-flat-icon_256.png" height="20" /></a>';
  htmlMiniFiche += htmlIG;
  htmlMiniFiche += '<span style="float:right; margin-right: -4px !important;">n°' + pkprd + '</span>'
  htmlMiniFiche += '<br></p>';

  var icon_carto = fournisseurcet === 'true' ? cetAnnuaireIcon_fournisseurcet : cetAnnuaireIcon;
  var icon_carto = categorie === 'viticulteur' ? cetAnnuaireIcon_viticulteur : cetAnnuaireIcon;
  var marker = L.marker(
      [coordinatesLl[1], coordinatesLl[0]], {icon: icon_carto}
    );
  var popupOptions = {};
  var popup = L.popup(popupOptions, marker);
  popup.setContent(htmlMiniFiche);
  marker.bindPopup(popup);

  // Append to cluster marker group and add marker to global array.
  clusters.addLayer(marker);
  marker_collection.push({type: icon_carto.options.type, mrkr: marker});
});

$('entite').each(function(i) {

    if ($(this).find('latlng').text().indexOf('ERROR') != -1) return;

    var type = $(this).find('type').text();
    var coordinatesLl = $(this).find('latlng').text().split('/');
    let denomination = $(this).find('denomination').text();
    let adresse = $(this).find('adresse').text();
    let email = $(this).find('email').text();
    if (type === 'amap') denomination = 'AMAP: ' + denomination;
    if (type === 'mbio') denomination = 'Magasin ou épicerie BIO: ' + denomination;
    
    var entite_icon = undefined;
    if (type === 'marche') entite_icon = cetAnnuaireMarcheIcon;
    if (type === 'amap') entite_icon = amapIcon;
    if (type === 'mbio') entite_icon = cetAnnuaireIcon_magasinBio;

    var marker = L.marker(
        [coordinatesLl[1], coordinatesLl[0]], {icon: entite_icon}
      );
    var popupOptions = {};
    var popup = L.popup(popupOptions, marker);
    popup.setContent('<span class="cet-ann-crt-popuptext-marches">' + denomination + '</span><br>' + adresse);
    marker.bindPopup(popup);

    // Append to cluster marker group and add marker to global array.
    clusters.addLayer(marker);
    marker_collection.push({type: entite_icon.options.type, mrkr: marker});
});

/**
 * Finally, append clusterized markers to map :
 */
cetcrtmainmap.addLayer(clusters);

/* *****************************************/
/* 40 km autour de castillon.***************/
L.circle([44.854, -0.043], {
    color: "red",
    fillColor: "red",
    fillOpacity: 0,
    radius: 1 * 10000.0,
    interactive: false
  }).addTo(cetcrtmainmap);
L.circle([44.854, -0.043], {
    color: "red",
    fillColor: "red",
    fillOpacity: 0,
    radius: 4 * 10000.0,
    interactive: false
  }).addTo(cetcrtmainmap);
var popupC1 = L.popup()
    .setLatLng([44.854, -0.043])
    .setContent('<p style="color:rgb(20,30,20);"><span style="font-weight:bold; color:red;">_____</span> Rayon de 10 et 40 km autour de<br>Castillon-la-Bataille')
    .openOn(cetcrtmainmap);
/* *****************************************/

// Naviagation vers geoloc client si acceptée.
function cartographieFlyTo(latlng, spliter) {
  scrollTowardsId('cet-annuaire-crt-main-anchor', 0);
  var lL = latlng.split(spliter);
  cetcrtmainmap.flyTo([lL[1], lL[0]], 16, { animate: true, duration: 1.5 });
}

/** **********************************************************************************************/

$(document).ready(function() {

  $('#valider-recherche-commune-cartographie').on('mousedown', function() {
    var c = $('#cet-annuaire-recherche-communes-value').val().trim();
    if (c.length < 2) return;
    var found = false;
    for (var i = 0; i < json_communes.length; ++i) {
      if (json_communes[i].libelle === c) {
        cetcrtmainmap.flyTo([json_communes[i].lat, json_communes[i].lng], 13.6, 
          { animate: true, duration: 1.5 });
        scrollTowardsId('cet-annuaire-crt-main-anchor', -20);
        var marker = L.marker([json_communes[i].lat, json_communes[i].lng]).bindPopup(
            L.popup().setLatLng([json_communes[i].lat, json_communes[i].lng]
              ).setContent(json_communes[i].libelle).openOn(cetcrtmainmap)
          ).addTo(cetcrtmainmap);
        found = true;
        break;
      }
    }

    if (found === false) {
        $('#modal-questionaire-titre').text('Aucune commune trouvée pour "' + c + '"');
        $('#modal-questionaire-paragraphe').text('Nous ne trouvons aucune commune pour "' + c 
          + '". Veuillez sélectionner une commune en cliquant dans la liste proposée ou sélectionner une commune à proximité de la votre.');
        $('#modal-questionaire-btn-primary').text("J'ai compris");
        $('#modal-questionaire-btn').click(); 
    }
  });

  var cetGeoLoc = new CETGeoLoc();
  var geoLocLatLng = cetGeoLoc.init(cetcrtmainmap, cetIciIcon);

  $('#parametres-recherche-detaillee-carto-cet-toggle').on('mousedown', function() {
    $('#parametres-recherche-detaillee-carto-cet').slideToggle(600);
  });
  $('#siste-styles-mapbox-style-appliquer').on('mousedown', function() {
    cetcrtmainmap.setStyle('mapbox://styles/mapbox/' + $('#liste-styles-mapbox-style').find(":selected").val());
  });

  /** ******************************************************************************************
   * Dropdown de filtres et événements DOM liés.
   */
  // Listing des icones + descriptions.
  for (var i = 0; i < icons_array.length; i++) {
    $('#liste-icones-fonctions').append('<li style="margin-bottom: 6px;"><img style="width:50px;" src="' 
      + icons_array[i].icon.options.iconUrl 
      + '" />&#160;&#160;' + icons_array[i].desc + '</li>');
    $('div#dropdown-filtres-cartographie-liste').append(
      '<div class="form-check form-group mb-3 cet-cartographie-filtre-input-container"><input class="form-check-input cet-cartographie-filtre-input" type="checkbox" value="' + icons_array[i].icon.options.type + '" id="cet-cartographie-filtre-' + icons_array[i].icon.options.type + '" checked="checked"><label class="form-check-label" for="cet-cartographie-filtre-' + icons_array[i].icon.options.type + '"><img src="' + icons_array[i].icon.options.iconUrl + '" height="32" />&#160;&#160;' + icons_array[i].icon.options.type + '</label></div>');
  }

  $('div#dropdown-filtres-cartographie-liste').append('<button class="btn cet-navbar-btn cet-navbar-btn-small" id="valider-filtres-types-cartographie" type="button" data-toggle="dropdown">Appliquer les filtres</button>');

  $('#dropdown-filtres-count').html(marker_collection.length);
  $('#total-elements-cartographies-visibles').text(marker_collection.length);

  $('#dropdown-filtres-cartographie-dropdown').on('hide.bs.dropdown', function (e) {                 
    e.stopPropagation(); e.preventDefault();                             
  });
  
  $('#valider-filtres-types-cartographie').on('mousedown', function() {
    filtres_actifs = [];
    $('.cet-cartographie-filtre-input').each(function () {
      if ($(this).is(':checked')) filtres_actifs.push($(this).val());
    });
    $('#dropdown-filtres-cartographie-liste').removeClass('show');
    appliquerFiltreCartographie(filtres_actifs);
  });
  /** ****************************************************************************************** */

});

function appliquerFiltreCartographie(filtres_actifs) {
  clusters.clearLayers();
  var count = 0;
  for (var i = 0; i < marker_collection.length; i++) {
    if (filtres_actifs.includes(marker_collection[i].type)) {
      clusters.addLayer(marker_collection[i].mrkr);
      ++count;
    }
  }
  $('#dropdown-filtres-count').html(count);
}